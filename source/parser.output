Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program function

    3 function: ID '(' parameterList ')' '=' statementList ';'

    4 parameterList: /* empty */
    5              | parameterList ',' parameter
    6              | parameter

    7 parameter: ID
    8          | NUMBER
    9          | epsilon

   10 epsilon: NUMBER PLUS_MINUS NUMBER

   11 statementList: /* empty */
   12              | statementList statement

   13 statement: lambda
   14          | variableDecl
   15          | assignment
   16          | expressionStatement
   17          | log
   18          | assert

   19 lambda: LET ID '(' idParameterList ')' '=' expression

   20 idParameterList: /* empty */
   21                | idParameterList ID

   22 variableDecl: LET ID '=' expression

   23 assignment: ID '=' expression

   24 expressionStatement: expression

   25 log: LOG expression
   26    | LOG STRING

   27 assert: ASSERT expression STRING

   28 expression: NUMBER
   29           | ID
   30           | functionCall
   31           | expression PLUS expression
   32           | expression SUB expression
   33           | expression MULT expression
   34           | expression DIV expression
   35           | expression EXP expression
   36           | expression INTDIV expression
   37           | expression MOD expression
   38           | expression EQUALS expression
   39           | expression NOT_EQUALS expression
   40           | expression LESS_EQUAL expression
   41           | expression GREATER_EQUAL expression
   42           | expression '<' expression
   43           | expression '>' expression
   44           | '(' expression ')'

   45 functionCall: ID '(' expressionList ')'

   46 expressionList: /* empty */
   47               | expressionList ',' expression
   48               | expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 19 44 45
')' (41) 3 19 44 45
',' (44) 5 47
';' (59) 3
'<' (60) 42
'=' (61) 3 19 22 23
'>' (62) 43
error (256)
LET (258) 19 22
LOG (259) 25 26
ASSERT (260) 27
EQUALS (261) 38
PLUS (262) 31
MULT (263) 33
DIV (264) 34
INTDIV (265) 36
MOD (266) 37
EXP (267) 35
SUB (268) 32
PLUS_MINUS (269) 10
ID (270) 3 7 19 21 22 23 29 45
STRING (271) 26 27
NUMBER (272) 8 10 28
NOT_EQUALS (273) 39
GREATER_EQUAL (274) 41
LESS_EQUAL (275) 40


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
program (29)
    on left: 1 2, on right: 0 2
function (30)
    on left: 3, on right: 2
parameterList (31)
    on left: 4 5 6, on right: 3 5
parameter (32)
    on left: 7 8 9, on right: 5 6
epsilon (33)
    on left: 10, on right: 9
statementList (34)
    on left: 11 12, on right: 3 12
statement (35)
    on left: 13 14 15 16 17 18, on right: 12
lambda (36)
    on left: 19, on right: 13
idParameterList (37)
    on left: 20 21, on right: 19 21
variableDecl (38)
    on left: 22, on right: 14
assignment (39)
    on left: 23, on right: 15
expressionStatement (40)
    on left: 24, on right: 16
log (41)
    on left: 25 26, on right: 17
assert (42)
    on left: 27, on right: 18
expression (43)
    on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44,
    on right: 19 22 23 24 25 27 31 32 33 34 35 36 37 38 39 40 41 42
    43 44 47 48
functionCall (44)
    on left: 45, on right: 30
expressionList (45)
    on left: 46 47 48, on right: 45 47


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    2 program: program . function

    $end  shift, and go to state 2
    ID    shift, and go to state 3

    function  go to state 4


state 2

    0 $accept: program $end .

    $default  accept


state 3

    3 function: ID . '(' parameterList ')' '=' statementList ';'

    '('  shift, and go to state 5


state 4

    2 program: program function .

    $default  reduce using rule 2 (program)


state 5

    3 function: ID '(' . parameterList ')' '=' statementList ';'

    ID      shift, and go to state 6
    NUMBER  shift, and go to state 7

    $default  reduce using rule 4 (parameterList)

    parameterList  go to state 8
    parameter      go to state 9
    epsilon        go to state 10


state 6

    7 parameter: ID .

    $default  reduce using rule 7 (parameter)


state 7

    8 parameter: NUMBER .
   10 epsilon: NUMBER . PLUS_MINUS NUMBER

    PLUS_MINUS  shift, and go to state 11

    $default  reduce using rule 8 (parameter)


state 8

    3 function: ID '(' parameterList . ')' '=' statementList ';'
    5 parameterList: parameterList . ',' parameter

    ')'  shift, and go to state 12
    ','  shift, and go to state 13


state 9

    6 parameterList: parameter .

    $default  reduce using rule 6 (parameterList)


state 10

    9 parameter: epsilon .

    $default  reduce using rule 9 (parameter)


state 11

   10 epsilon: NUMBER PLUS_MINUS . NUMBER

    NUMBER  shift, and go to state 14


state 12

    3 function: ID '(' parameterList ')' . '=' statementList ';'

    '='  shift, and go to state 15


state 13

    5 parameterList: parameterList ',' . parameter

    ID      shift, and go to state 6
    NUMBER  shift, and go to state 7

    parameter  go to state 16
    epsilon    go to state 10


state 14

   10 epsilon: NUMBER PLUS_MINUS NUMBER .

    $default  reduce using rule 10 (epsilon)


state 15

    3 function: ID '(' parameterList ')' '=' . statementList ';'

    $default  reduce using rule 11 (statementList)

    statementList  go to state 17


state 16

    5 parameterList: parameterList ',' parameter .

    $default  reduce using rule 5 (parameterList)


state 17

    3 function: ID '(' parameterList ')' '=' statementList . ';'
   12 statementList: statementList . statement

    LET     shift, and go to state 18
    LOG     shift, and go to state 19
    ASSERT  shift, and go to state 20
    ID      shift, and go to state 21
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23
    ';'     shift, and go to state 24

    statement            go to state 25
    lambda               go to state 26
    variableDecl         go to state 27
    assignment           go to state 28
    expressionStatement  go to state 29
    log                  go to state 30
    assert               go to state 31
    expression           go to state 32
    functionCall         go to state 33


state 18

   19 lambda: LET . ID '(' idParameterList ')' '=' expression
   22 variableDecl: LET . ID '=' expression

    ID  shift, and go to state 34


state 19

   25 log: LOG . expression
   26    | LOG . STRING

    ID      shift, and go to state 35
    STRING  shift, and go to state 36
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 37
    functionCall  go to state 33


state 20

   27 assert: ASSERT . expression STRING

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 38
    functionCall  go to state 33


state 21

   23 assignment: ID . '=' expression
   29 expression: ID .
   45 functionCall: ID . '(' expressionList ')'

    '('  shift, and go to state 39
    '='  shift, and go to state 40

    $default  reduce using rule 29 (expression)


state 22

   28 expression: NUMBER .

    $default  reduce using rule 28 (expression)


state 23

   44 expression: '(' . expression ')'

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 41
    functionCall  go to state 33


state 24

    3 function: ID '(' parameterList ')' '=' statementList ';' .

    $default  reduce using rule 3 (function)


state 25

   12 statementList: statementList statement .

    $default  reduce using rule 12 (statementList)


state 26

   13 statement: lambda .

    $default  reduce using rule 13 (statement)


state 27

   14 statement: variableDecl .

    $default  reduce using rule 14 (statement)


state 28

   15 statement: assignment .

    $default  reduce using rule 15 (statement)


state 29

   16 statement: expressionStatement .

    $default  reduce using rule 16 (statement)


state 30

   17 statement: log .

    $default  reduce using rule 17 (statement)


state 31

   18 statement: assert .

    $default  reduce using rule 18 (statement)


state 32

   24 expressionStatement: expression .
   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    EQUALS         shift, and go to state 42
    PLUS           shift, and go to state 43
    MULT           shift, and go to state 44
    DIV            shift, and go to state 45
    INTDIV         shift, and go to state 46
    MOD            shift, and go to state 47
    EXP            shift, and go to state 48
    SUB            shift, and go to state 49
    NOT_EQUALS     shift, and go to state 50
    '<'            shift, and go to state 51
    '>'            shift, and go to state 52
    GREATER_EQUAL  shift, and go to state 53
    LESS_EQUAL     shift, and go to state 54

    $default  reduce using rule 24 (expressionStatement)


state 33

   30 expression: functionCall .

    $default  reduce using rule 30 (expression)


state 34

   19 lambda: LET ID . '(' idParameterList ')' '=' expression
   22 variableDecl: LET ID . '=' expression

    '('  shift, and go to state 55
    '='  shift, and go to state 56


state 35

   29 expression: ID .
   45 functionCall: ID . '(' expressionList ')'

    '('  shift, and go to state 39

    $default  reduce using rule 29 (expression)


state 36

   26 log: LOG STRING .

    $default  reduce using rule 26 (log)


state 37

   25 log: LOG expression .
   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    EQUALS         shift, and go to state 42
    PLUS           shift, and go to state 43
    MULT           shift, and go to state 44
    DIV            shift, and go to state 45
    INTDIV         shift, and go to state 46
    MOD            shift, and go to state 47
    EXP            shift, and go to state 48
    SUB            shift, and go to state 49
    NOT_EQUALS     shift, and go to state 50
    '<'            shift, and go to state 51
    '>'            shift, and go to state 52
    GREATER_EQUAL  shift, and go to state 53
    LESS_EQUAL     shift, and go to state 54

    $default  reduce using rule 25 (log)


state 38

   27 assert: ASSERT expression . STRING
   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    EQUALS         shift, and go to state 42
    PLUS           shift, and go to state 43
    MULT           shift, and go to state 44
    DIV            shift, and go to state 45
    INTDIV         shift, and go to state 46
    MOD            shift, and go to state 47
    EXP            shift, and go to state 48
    SUB            shift, and go to state 49
    STRING         shift, and go to state 57
    NOT_EQUALS     shift, and go to state 50
    '<'            shift, and go to state 51
    '>'            shift, and go to state 52
    GREATER_EQUAL  shift, and go to state 53
    LESS_EQUAL     shift, and go to state 54


state 39

   45 functionCall: ID '(' . expressionList ')'

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    $default  reduce using rule 46 (expressionList)

    expression      go to state 58
    functionCall    go to state 33
    expressionList  go to state 59


state 40

   23 assignment: ID '=' . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 60
    functionCall  go to state 33


state 41

   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression
   44           | '(' expression . ')'

    EQUALS         shift, and go to state 42
    PLUS           shift, and go to state 43
    MULT           shift, and go to state 44
    DIV            shift, and go to state 45
    INTDIV         shift, and go to state 46
    MOD            shift, and go to state 47
    EXP            shift, and go to state 48
    SUB            shift, and go to state 49
    NOT_EQUALS     shift, and go to state 50
    '<'            shift, and go to state 51
    '>'            shift, and go to state 52
    GREATER_EQUAL  shift, and go to state 53
    LESS_EQUAL     shift, and go to state 54
    ')'            shift, and go to state 61


state 42

   38 expression: expression EQUALS . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 62
    functionCall  go to state 33


state 43

   31 expression: expression PLUS . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 63
    functionCall  go to state 33


state 44

   33 expression: expression MULT . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 64
    functionCall  go to state 33


state 45

   34 expression: expression DIV . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 65
    functionCall  go to state 33


state 46

   36 expression: expression INTDIV . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 66
    functionCall  go to state 33


state 47

   37 expression: expression MOD . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 67
    functionCall  go to state 33


state 48

   35 expression: expression EXP . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 68
    functionCall  go to state 33


state 49

   32 expression: expression SUB . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 69
    functionCall  go to state 33


state 50

   39 expression: expression NOT_EQUALS . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 70
    functionCall  go to state 33


state 51

   42 expression: expression '<' . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 71
    functionCall  go to state 33


state 52

   43 expression: expression '>' . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 72
    functionCall  go to state 33


state 53

   41 expression: expression GREATER_EQUAL . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 73
    functionCall  go to state 33


state 54

   40 expression: expression LESS_EQUAL . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 74
    functionCall  go to state 33


state 55

   19 lambda: LET ID '(' . idParameterList ')' '=' expression

    $default  reduce using rule 20 (idParameterList)

    idParameterList  go to state 75


state 56

   22 variableDecl: LET ID '=' . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 76
    functionCall  go to state 33


state 57

   27 assert: ASSERT expression STRING .

    $default  reduce using rule 27 (assert)


state 58

   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression
   48 expressionList: expression .

    EQUALS         shift, and go to state 42
    PLUS           shift, and go to state 43
    MULT           shift, and go to state 44
    DIV            shift, and go to state 45
    INTDIV         shift, and go to state 46
    MOD            shift, and go to state 47
    EXP            shift, and go to state 48
    SUB            shift, and go to state 49
    NOT_EQUALS     shift, and go to state 50
    '<'            shift, and go to state 51
    '>'            shift, and go to state 52
    GREATER_EQUAL  shift, and go to state 53
    LESS_EQUAL     shift, and go to state 54

    $default  reduce using rule 48 (expressionList)


state 59

   45 functionCall: ID '(' expressionList . ')'
   47 expressionList: expressionList . ',' expression

    ')'  shift, and go to state 77
    ','  shift, and go to state 78


state 60

   23 assignment: ID '=' expression .
   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    EQUALS         shift, and go to state 42
    PLUS           shift, and go to state 43
    MULT           shift, and go to state 44
    DIV            shift, and go to state 45
    INTDIV         shift, and go to state 46
    MOD            shift, and go to state 47
    EXP            shift, and go to state 48
    SUB            shift, and go to state 49
    NOT_EQUALS     shift, and go to state 50
    '<'            shift, and go to state 51
    '>'            shift, and go to state 52
    GREATER_EQUAL  shift, and go to state 53
    LESS_EQUAL     shift, and go to state 54

    $default  reduce using rule 23 (assignment)


state 61

   44 expression: '(' expression ')' .

    $default  reduce using rule 44 (expression)


state 62

   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   38           | expression EQUALS expression .
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    PLUS           shift, and go to state 43
    MULT           shift, and go to state 44
    DIV            shift, and go to state 45
    INTDIV         shift, and go to state 46
    MOD            shift, and go to state 47
    EXP            shift, and go to state 48
    SUB            shift, and go to state 49
    '<'            shift, and go to state 51
    '>'            shift, and go to state 52
    GREATER_EQUAL  shift, and go to state 53
    LESS_EQUAL     shift, and go to state 54

    $default  reduce using rule 38 (expression)


state 63

   31 expression: expression . PLUS expression
   31           | expression PLUS expression .
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    MULT    shift, and go to state 44
    DIV     shift, and go to state 45
    INTDIV  shift, and go to state 46
    MOD     shift, and go to state 47
    EXP     shift, and go to state 48

    $default  reduce using rule 31 (expression)


state 64

   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   33           | expression MULT expression .
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    EXP  shift, and go to state 48

    $default  reduce using rule 33 (expression)


state 65

   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   34           | expression DIV expression .
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    EXP  shift, and go to state 48

    $default  reduce using rule 34 (expression)


state 66

   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   36           | expression INTDIV expression .
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    EXP  shift, and go to state 48

    $default  reduce using rule 36 (expression)


state 67

   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   37           | expression MOD expression .
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    EXP  shift, and go to state 48

    $default  reduce using rule 37 (expression)


state 68

   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   35           | expression EXP expression .
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    $default  reduce using rule 35 (expression)


state 69

   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   32           | expression SUB expression .
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    MULT    shift, and go to state 44
    DIV     shift, and go to state 45
    INTDIV  shift, and go to state 46
    MOD     shift, and go to state 47
    EXP     shift, and go to state 48

    $default  reduce using rule 32 (expression)


state 70

   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   39           | expression NOT_EQUALS expression .
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    PLUS           shift, and go to state 43
    MULT           shift, and go to state 44
    DIV            shift, and go to state 45
    INTDIV         shift, and go to state 46
    MOD            shift, and go to state 47
    EXP            shift, and go to state 48
    SUB            shift, and go to state 49
    '<'            shift, and go to state 51
    '>'            shift, and go to state 52
    GREATER_EQUAL  shift, and go to state 53
    LESS_EQUAL     shift, and go to state 54

    $default  reduce using rule 39 (expression)


state 71

   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   42           | expression '<' expression .
   43           | expression . '>' expression

    PLUS    shift, and go to state 43
    MULT    shift, and go to state 44
    DIV     shift, and go to state 45
    INTDIV  shift, and go to state 46
    MOD     shift, and go to state 47
    EXP     shift, and go to state 48
    SUB     shift, and go to state 49

    $default  reduce using rule 42 (expression)


state 72

   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression
   43           | expression '>' expression .

    PLUS    shift, and go to state 43
    MULT    shift, and go to state 44
    DIV     shift, and go to state 45
    INTDIV  shift, and go to state 46
    MOD     shift, and go to state 47
    EXP     shift, and go to state 48
    SUB     shift, and go to state 49

    $default  reduce using rule 43 (expression)


state 73

   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   41           | expression GREATER_EQUAL expression .
   42           | expression . '<' expression
   43           | expression . '>' expression

    PLUS    shift, and go to state 43
    MULT    shift, and go to state 44
    DIV     shift, and go to state 45
    INTDIV  shift, and go to state 46
    MOD     shift, and go to state 47
    EXP     shift, and go to state 48
    SUB     shift, and go to state 49

    $default  reduce using rule 41 (expression)


state 74

   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   40           | expression LESS_EQUAL expression .
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    PLUS    shift, and go to state 43
    MULT    shift, and go to state 44
    DIV     shift, and go to state 45
    INTDIV  shift, and go to state 46
    MOD     shift, and go to state 47
    EXP     shift, and go to state 48
    SUB     shift, and go to state 49

    $default  reduce using rule 40 (expression)


state 75

   19 lambda: LET ID '(' idParameterList . ')' '=' expression
   21 idParameterList: idParameterList . ID

    ID   shift, and go to state 79
    ')'  shift, and go to state 80


state 76

   22 variableDecl: LET ID '=' expression .
   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    EQUALS         shift, and go to state 42
    PLUS           shift, and go to state 43
    MULT           shift, and go to state 44
    DIV            shift, and go to state 45
    INTDIV         shift, and go to state 46
    MOD            shift, and go to state 47
    EXP            shift, and go to state 48
    SUB            shift, and go to state 49
    NOT_EQUALS     shift, and go to state 50
    '<'            shift, and go to state 51
    '>'            shift, and go to state 52
    GREATER_EQUAL  shift, and go to state 53
    LESS_EQUAL     shift, and go to state 54

    $default  reduce using rule 22 (variableDecl)


state 77

   45 functionCall: ID '(' expressionList ')' .

    $default  reduce using rule 45 (functionCall)


state 78

   47 expressionList: expressionList ',' . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 81
    functionCall  go to state 33


state 79

   21 idParameterList: idParameterList ID .

    $default  reduce using rule 21 (idParameterList)


state 80

   19 lambda: LET ID '(' idParameterList ')' . '=' expression

    '='  shift, and go to state 82


state 81

   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression
   47 expressionList: expressionList ',' expression .

    EQUALS         shift, and go to state 42
    PLUS           shift, and go to state 43
    MULT           shift, and go to state 44
    DIV            shift, and go to state 45
    INTDIV         shift, and go to state 46
    MOD            shift, and go to state 47
    EXP            shift, and go to state 48
    SUB            shift, and go to state 49
    NOT_EQUALS     shift, and go to state 50
    '<'            shift, and go to state 51
    '>'            shift, and go to state 52
    GREATER_EQUAL  shift, and go to state 53
    LESS_EQUAL     shift, and go to state 54

    $default  reduce using rule 47 (expressionList)


state 82

   19 lambda: LET ID '(' idParameterList ')' '=' . expression

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 22
    '('     shift, and go to state 23

    expression    go to state 83
    functionCall  go to state 33


state 83

   19 lambda: LET ID '(' idParameterList ')' '=' expression .
   31 expression: expression . PLUS expression
   32           | expression . SUB expression
   33           | expression . MULT expression
   34           | expression . DIV expression
   35           | expression . EXP expression
   36           | expression . INTDIV expression
   37           | expression . MOD expression
   38           | expression . EQUALS expression
   39           | expression . NOT_EQUALS expression
   40           | expression . LESS_EQUAL expression
   41           | expression . GREATER_EQUAL expression
   42           | expression . '<' expression
   43           | expression . '>' expression

    EQUALS         shift, and go to state 42
    PLUS           shift, and go to state 43
    MULT           shift, and go to state 44
    DIV            shift, and go to state 45
    INTDIV         shift, and go to state 46
    MOD            shift, and go to state 47
    EXP            shift, and go to state 48
    SUB            shift, and go to state 49
    NOT_EQUALS     shift, and go to state 50
    '<'            shift, and go to state 51
    '>'            shift, and go to state 52
    GREATER_EQUAL  shift, and go to state 53
    LESS_EQUAL     shift, and go to state 54

    $default  reduce using rule 19 (lambda)
